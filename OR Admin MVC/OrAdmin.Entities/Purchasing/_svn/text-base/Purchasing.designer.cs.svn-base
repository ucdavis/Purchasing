#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrAdmin.Entities.Purchasing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OVC_Dev")]
	public partial class PurchasingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBackupUserMap(BackupUserMap instance);
    partial void UpdateBackupUserMap(BackupUserMap instance);
    partial void DeleteBackupUserMap(BackupUserMap instance);
    partial void InsertEventMap(EventMap instance);
    partial void UpdateEventMap(EventMap instance);
    partial void DeleteEventMap(EventMap instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertMilestoneMap(MilestoneMap instance);
    partial void UpdateMilestoneMap(MilestoneMap instance);
    partial void DeleteMilestoneMap(MilestoneMap instance);
    partial void InsertMilestone(Milestone instance);
    partial void UpdateMilestone(Milestone instance);
    partial void DeleteMilestone(Milestone instance);
    partial void InsertPiApproval(PiApproval instance);
    partial void UpdatePiApproval(PiApproval instance);
    partial void DeletePiApproval(PiApproval instance);
    partial void InsertReceipt(Receipt instance);
    partial void UpdateReceipt(Receipt instance);
    partial void DeleteReceipt(Receipt instance);
    partial void InsertShippingMethod(ShippingMethod instance);
    partial void UpdateShippingMethod(ShippingMethod instance);
    partial void DeleteShippingMethod(ShippingMethod instance);
    partial void InsertRequestComment(RequestComment instance);
    partial void UpdateRequestComment(RequestComment instance);
    partial void DeleteRequestComment(RequestComment instance);
    partial void InsertCommodityType(CommodityType instance);
    partial void UpdateCommodityType(CommodityType instance);
    partial void DeleteCommodityType(CommodityType instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertShipToAddress(ShipToAddress instance);
    partial void UpdateShipToAddress(ShipToAddress instance);
    partial void DeleteShipToAddress(ShipToAddress instance);
    partial void InsertDpoItem(DpoItem instance);
    partial void UpdateDpoItem(DpoItem instance);
    partial void DeleteDpoItem(DpoItem instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
    #endregion
		
		public PurchasingDataContext() : 
				base(global::OrAdmin.Entities.Properties.Settings.Default.OVC_DevConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PurchasingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PurchasingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PurchasingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PurchasingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BackupUserMap> BackupUserMaps
		{
			get
			{
				return this.GetTable<BackupUserMap>();
			}
		}
		
		public System.Data.Linq.Table<EventMap> EventMaps
		{
			get
			{
				return this.GetTable<EventMap>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<MilestoneMap> MilestoneMaps
		{
			get
			{
				return this.GetTable<MilestoneMap>();
			}
		}
		
		public System.Data.Linq.Table<Milestone> Milestones
		{
			get
			{
				return this.GetTable<Milestone>();
			}
		}
		
		public System.Data.Linq.Table<PiApproval> PiApprovals
		{
			get
			{
				return this.GetTable<PiApproval>();
			}
		}
		
		public System.Data.Linq.Table<Receipt> Receipts
		{
			get
			{
				return this.GetTable<Receipt>();
			}
		}
		
		public System.Data.Linq.Table<ShippingMethod> ShippingMethods
		{
			get
			{
				return this.GetTable<ShippingMethod>();
			}
		}
		
		public System.Data.Linq.Table<RequestComment> RequestComments
		{
			get
			{
				return this.GetTable<RequestComment>();
			}
		}
		
		public System.Data.Linq.Table<CommodityType> CommodityTypes
		{
			get
			{
				return this.GetTable<CommodityType>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<ShipToAddress> ShipToAddresses
		{
			get
			{
				return this.GetTable<ShipToAddress>();
			}
		}
		
		public System.Data.Linq.Table<DaFISVendor> DaFISVendors
		{
			get
			{
				return this.GetTable<DaFISVendor>();
			}
		}
		
		public System.Data.Linq.Table<DpoItem> DpoItems
		{
			get
			{
				return this.GetTable<DpoItem>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<Attachment> Attachments
		{
			get
			{
				return this.GetTable<Attachment>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sPUR_FindDaFISVendor")]
		public ISingleResult<DaFISVendor> sPUR_FindDaFISVendor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string whereClause)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), whereClause);
			return ((ISingleResult<DaFISVendor>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_BackupUserMaps")]
	public partial class BackupUserMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _BackupUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnBackupUserIdChanging(string value);
    partial void OnBackupUserIdChanged();
    #endregion
		
		public BackupUserMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupUserId", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string BackupUserId
		{
			get
			{
				return this._BackupUserId;
			}
			set
			{
				if ((this._BackupUserId != value))
				{
					this.OnBackupUserIdChanging(value);
					this.SendPropertyChanging();
					this._BackupUserId = value;
					this.SendPropertyChanged("BackupUserId");
					this.OnBackupUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_EventMaps")]
	public partial class EventMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestId;
		
		private int _EventValue;
		
		private System.DateTime _SubmittedOn;
		
		private string _SubmittedBy;
		
		private string _Comments;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnEventValueChanging(int value);
    partial void OnEventValueChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public EventMap()
		{
			this._Event = default(EntityRef<Event>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventValue", DbType="Int NOT NULL")]
		public int EventValue
		{
			get
			{
				return this._EventValue;
			}
			set
			{
				if ((this._EventValue != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventValueChanging(value);
					this.SendPropertyChanging();
					this._EventValue = value;
					this.SendPropertyChanged("EventValue");
					this.OnEventValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(1024)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventMap", Storage="_Event", ThisKey="EventValue", OtherKey="Value", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.EventMaps.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.EventMaps.Add(this);
						this._EventValue = value.Value;
					}
					else
					{
						this._EventValue = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_EventMap", Storage="_Request", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.EventMaps.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.EventMaps.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_Events")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventName;
		
		private int _Value;
		
		private string _ImageName;
		
		private string _Description;
		
		private EntitySet<EventMap> _EventMaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Event()
		{
			this._EventMaps = new EntitySet<EventMap>(new Action<EventMap>(this.attach_EventMaps), new Action<EventMap>(this.detach_EventMaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventMap", Storage="_EventMaps", ThisKey="Value", OtherKey="EventValue")]
		public EntitySet<EventMap> EventMaps
		{
			get
			{
				return this._EventMaps;
			}
			set
			{
				this._EventMaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventMaps(EventMap entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_EventMaps(EventMap entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_MilestoneMaps")]
	public partial class MilestoneMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestId;
		
		private int _MilestoneValue;
		
		private System.DateTime _SubmittedOn;
		
		private string _SubmittedBy;
		
		private string _Comments;
		
		private EntityRef<Milestone> _Milestone;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnMilestoneValueChanging(int value);
    partial void OnMilestoneValueChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public MilestoneMap()
		{
			this._Milestone = default(EntityRef<Milestone>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneValue", DbType="Int NOT NULL")]
		public int MilestoneValue
		{
			get
			{
				return this._MilestoneValue;
			}
			set
			{
				if ((this._MilestoneValue != value))
				{
					if (this._Milestone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMilestoneValueChanging(value);
					this.SendPropertyChanging();
					this._MilestoneValue = value;
					this.SendPropertyChanged("MilestoneValue");
					this.OnMilestoneValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(1024)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Milestone_MilestoneMap", Storage="_Milestone", ThisKey="MilestoneValue", OtherKey="Value", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Milestone Milestone
		{
			get
			{
				return this._Milestone.Entity;
			}
			set
			{
				Milestone previousValue = this._Milestone.Entity;
				if (((previousValue != value) 
							|| (this._Milestone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Milestone.Entity = null;
						previousValue.MilestoneMaps.Remove(this);
					}
					this._Milestone.Entity = value;
					if ((value != null))
					{
						value.MilestoneMaps.Add(this);
						this._MilestoneValue = value.Value;
					}
					else
					{
						this._MilestoneValue = default(int);
					}
					this.SendPropertyChanged("Milestone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_MilestoneMap", Storage="_Request", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.MilestoneMaps.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.MilestoneMaps.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_Milestones")]
	public partial class Milestone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MilestoneName;
		
		private int _Value;
		
		private string _ImageName;
		
		private string _Description;
		
		private EntitySet<MilestoneMap> _MilestoneMaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMilestoneNameChanging(string value);
    partial void OnMilestoneNameChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Milestone()
		{
			this._MilestoneMaps = new EntitySet<MilestoneMap>(new Action<MilestoneMap>(this.attach_MilestoneMaps), new Action<MilestoneMap>(this.detach_MilestoneMaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string MilestoneName
		{
			get
			{
				return this._MilestoneName;
			}
			set
			{
				if ((this._MilestoneName != value))
				{
					this.OnMilestoneNameChanging(value);
					this.SendPropertyChanging();
					this._MilestoneName = value;
					this.SendPropertyChanged("MilestoneName");
					this.OnMilestoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Milestone_MilestoneMap", Storage="_MilestoneMaps", ThisKey="Value", OtherKey="MilestoneValue")]
		public EntitySet<MilestoneMap> MilestoneMaps
		{
			get
			{
				return this._MilestoneMaps;
			}
			set
			{
				this._MilestoneMaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MilestoneMaps(MilestoneMap entity)
		{
			this.SendPropertyChanging();
			entity.Milestone = this;
		}
		
		private void detach_MilestoneMaps(MilestoneMap entity)
		{
			this.SendPropertyChanging();
			entity.Milestone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_PiApprovals")]
	public partial class PiApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestId;
		
		private string _PiId;
		
		private bool _Approval;
		
		private System.DateTime _SubmittedOn;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnPiIdChanging(string value);
    partial void OnPiIdChanged();
    partial void OnApprovalChanging(bool value);
    partial void OnApprovalChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    #endregion
		
		public PiApproval()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiId", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string PiId
		{
			get
			{
				return this._PiId;
			}
			set
			{
				if ((this._PiId != value))
				{
					this.OnPiIdChanging(value);
					this.SendPropertyChanging();
					this._PiId = value;
					this.SendPropertyChanged("PiId");
					this.OnPiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approval", DbType="Bit NOT NULL")]
		public bool Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_PiApproval", Storage="_Request", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.PiApprovals.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.PiApprovals.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_Receipts")]
	public partial class Receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestId;
		
		private System.DateTime _SendOn;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnSendOnChanging(System.DateTime value);
    partial void OnSendOnChanged();
    #endregion
		
		public Receipt()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendOn", DbType="DateTime NOT NULL")]
		public System.DateTime SendOn
		{
			get
			{
				return this._SendOn;
			}
			set
			{
				if ((this._SendOn != value))
				{
					this.OnSendOnChanging(value);
					this.SendPropertyChanging();
					this._SendOn = value;
					this.SendPropertyChanged("SendOn");
					this.OnSendOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Receipt", Storage="_Request", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Receipts.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Receipts.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_ShippingMethods")]
	public partial class ShippingMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ShippingMethodName;
		
		private EntitySet<Request> _Requests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShippingMethodNameChanging(string value);
    partial void OnShippingMethodNameChanged();
    #endregion
		
		public ShippingMethod()
		{
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethodName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ShippingMethodName
		{
			get
			{
				return this._ShippingMethodName;
			}
			set
			{
				if ((this._ShippingMethodName != value))
				{
					this.OnShippingMethodNameChanging(value);
					this.SendPropertyChanging();
					this._ShippingMethodName = value;
					this.SendPropertyChanged("ShippingMethodName");
					this.OnShippingMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingMethod_Request", Storage="_Requests", ThisKey="Id", OtherKey="ShippingMethodId")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.ShippingMethod = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.ShippingMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_RequestComments")]
	public partial class RequestComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestId;
		
		private string _Comments;
		
		private string _SubmittedBy;
		
		private System.DateTime _SubmittedOn;
		
		private EntitySet<Attachment> _PUR_Attachments;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    #endregion
		
		public RequestComment()
		{
			this._PUR_Attachments = new EntitySet<Attachment>(new Action<Attachment>(this.attach_PUR_Attachments), new Action<Attachment>(this.detach_PUR_Attachments));
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestComment_PUR_Attachment", Storage="_PUR_Attachments", ThisKey="Id", OtherKey="CommentId")]
		public EntitySet<Attachment> Attachments
		{
			get
			{
				return this._PUR_Attachments;
			}
			set
			{
				this._PUR_Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestComment", Storage="_Request", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestComments.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestComments.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PUR_Attachments(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.RequestComment = this;
		}
		
		private void detach_PUR_Attachments(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.RequestComment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_CommodityTypes")]
	public partial class CommodityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CommodityName;
		
		private string _Description;
		
		private System.Nullable<int> _UnitId;
		
		private EntitySet<DpoItem> _DpoItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommodityNameChanging(string value);
    partial void OnCommodityNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    #endregion
		
		public CommodityType()
		{
			this._DpoItems = new EntitySet<DpoItem>(new Action<DpoItem>(this.attach_DpoItems), new Action<DpoItem>(this.detach_DpoItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string CommodityName
		{
			get
			{
				return this._CommodityName;
			}
			set
			{
				if ((this._CommodityName != value))
				{
					this.OnCommodityNameChanging(value);
					this.SendPropertyChanging();
					this._CommodityName = value;
					this.SendPropertyChanged("CommodityName");
					this.OnCommodityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommodityType_DpoItem", Storage="_DpoItems", ThisKey="Id", OtherKey="CommodityTypeId")]
		public EntitySet<DpoItem> DpoItems
		{
			get
			{
				return this._DpoItems;
			}
			set
			{
				this._DpoItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DpoItems(DpoItem entity)
		{
			this.SendPropertyChanging();
			entity.CommodityType = this;
		}
		
		private void detach_DpoItems(DpoItem entity)
		{
			this.SendPropertyChanging();
			entity.CommodityType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_Vendors")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _DafisVendorId;
		
		private int _Type;
		
		private string _FriendlyName;
		
		private string _Name;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Url;
		
		private string _Notes;
		
		private System.DateTime _SubmittedOn;
		
		private string _SubmittedBy;
		
		private System.DateTime _LastModified;
		
		private string _LastModifiedBy;
		
		private int _UnitId;
		
		private EntitySet<Request> _Requests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDafisVendorIdChanging(System.Nullable<int> value);
    partial void OnDafisVendorIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    #endregion
		
		public Vendor()
		{
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DafisVendorId", DbType="Int")]
		public System.Nullable<int> DafisVendorId
		{
			get
			{
				return this._DafisVendorId;
			}
			set
			{
				if ((this._DafisVendorId != value))
				{
					this.OnDafisVendorIdChanging(value);
					this.SendPropertyChanging();
					this._DafisVendorId = value;
					this.SendPropertyChanged("DafisVendorId");
					this.OnDafisVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(512)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Request", Storage="_Requests", ThisKey="Id", OtherKey="VendorId")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_ShipToAddresses")]
	public partial class ShipToAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FriendlyName;
		
		private string _Campus;
		
		private string _Street;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Building;
		
		private string _Room;
		
		private string _Phone;
		
		private string _Fax;
		
		private bool _Share;
		
		private System.DateTime _SubmittedOn;
		
		private string _SubmittedBy;
		
		private int _UnitId;
		
		private EntitySet<Request> _Requests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnCampusChanging(string value);
    partial void OnCampusChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnBuildingChanging(string value);
    partial void OnBuildingChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnShareChanging(bool value);
    partial void OnShareChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    #endregion
		
		public ShipToAddress()
		{
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campus", DbType="NVarChar(256)")]
		public string Campus
		{
			get
			{
				return this._Campus;
			}
			set
			{
				if ((this._Campus != value))
				{
					this.OnCampusChanging(value);
					this.SendPropertyChanging();
					this._Campus = value;
					this.SendPropertyChanged("Campus");
					this.OnCampusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="NVarChar(64)")]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this.OnBuildingChanging(value);
					this.SendPropertyChanging();
					this._Building = value;
					this.SendPropertyChanged("Building");
					this.OnBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="NVarChar(64)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Share", DbType="Bit NOT NULL")]
		public bool Share
		{
			get
			{
				return this._Share;
			}
			set
			{
				if ((this._Share != value))
				{
					this.OnShareChanging(value);
					this.SendPropertyChanging();
					this._Share = value;
					this.SendPropertyChanged("Share");
					this.OnShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipToAddress_Request", Storage="_Requests", ThisKey="Id", OtherKey="ShipToId")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.ShipToAddress = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.ShipToAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DaFISVendor
	{
		
		private string _VendorId;
		
		private string _VendorName;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _CityName;
		
		private string _StateCode;
		
		private string _ZipCode;
		
		private string _CountryCode;
		
		private string _WebAddress;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _ContactFax;
		
		private string _ContactEmail;
		
		public DaFISVendor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="NVarChar(64)")]
		public string VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this._VendorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(1024)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(1024)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this._AddressLine1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(1024)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this._AddressLine2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(256)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="NVarChar(64)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(64)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(64)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this._CountryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAddress", DbType="NVarChar(1024)")]
		public string WebAddress
		{
			get
			{
				return this._WebAddress;
			}
			set
			{
				if ((this._WebAddress != value))
				{
					this._WebAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(256)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this._ContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(64)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this._ContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFax", DbType="NVarChar(64)")]
		public string ContactFax
		{
			get
			{
				return this._ContactFax;
			}
			set
			{
				if ((this._ContactFax != value))
				{
					this._ContactFax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(256)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this._ContactEmail = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_DpoItems")]
	public partial class DpoItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestId;
		
		private System.Nullable<int> _Quantity;
		
		private string _CatalogNumber;
		
		private string _Unit;
		
		private string _Description;
		
		private System.Nullable<decimal> _PricePerUnit;
		
		private string _Url;
		
		private string _Notes;
		
		private string _PromoCode;
		
		private int _CommodityTypeId;
		
		private string _SubmittedBy;
		
		private System.DateTime _SubmittedOn;
		
		private EntityRef<CommodityType> _CommodityType;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnCatalogNumberChanging(string value);
    partial void OnCatalogNumberChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPricePerUnitChanging(System.Nullable<decimal> value);
    partial void OnPricePerUnitChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnCommodityTypeIdChanging(int value);
    partial void OnCommodityTypeIdChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    #endregion
		
		public DpoItem()
		{
			this._CommodityType = default(EntityRef<CommodityType>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogNumber", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string CatalogNumber
		{
			get
			{
				return this._CatalogNumber;
			}
			set
			{
				if ((this._CatalogNumber != value))
				{
					this.OnCatalogNumberChanging(value);
					this.SendPropertyChanging();
					this._CatalogNumber = value;
					this.SendPropertyChanged("CatalogNumber");
					this.OnCatalogNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerUnit", DbType="Money")]
		public System.Nullable<decimal> PricePerUnit
		{
			get
			{
				return this._PricePerUnit;
			}
			set
			{
				if ((this._PricePerUnit != value))
				{
					this.OnPricePerUnitChanging(value);
					this.SendPropertyChanging();
					this._PricePerUnit = value;
					this.SendPropertyChanged("PricePerUnit");
					this.OnPricePerUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(1024)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1024)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="NVarChar(1024)")]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityTypeId", DbType="Int NOT NULL")]
		public int CommodityTypeId
		{
			get
			{
				return this._CommodityTypeId;
			}
			set
			{
				if ((this._CommodityTypeId != value))
				{
					if (this._CommodityType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommodityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CommodityTypeId = value;
					this.SendPropertyChanged("CommodityTypeId");
					this.OnCommodityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommodityType_DpoItem", Storage="_CommodityType", ThisKey="CommodityTypeId", OtherKey="Id", IsForeignKey=true)]
		public CommodityType CommodityType
		{
			get
			{
				return this._CommodityType.Entity;
			}
			set
			{
				CommodityType previousValue = this._CommodityType.Entity;
				if (((previousValue != value) 
							|| (this._CommodityType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommodityType.Entity = null;
						previousValue.DpoItems.Remove(this);
					}
					this._CommodityType.Entity = value;
					if ((value != null))
					{
						value.DpoItems.Add(this);
						this._CommodityTypeId = value.Id;
					}
					else
					{
						this._CommodityTypeId = default(int);
					}
					this.SendPropertyChanged("CommodityType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_DpoItem", Storage="_Request", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.DpoItems.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.DpoItems.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_Requests")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _UniqueId;
		
		private string _FriendlyUniqueId;
		
		private int _UnitId;
		
		private string _RequesterId;
		
		private string _PurchaserId;
		
		private int _VendorId;
		
		private int _RequestType;
		
		private string _DafisDoc;
		
		private string _DafisPO;
		
		private string _VendorConfirmationNum;
		
		private System.Nullable<bool> _IsPerishable;
		
		private System.Nullable<bool> _IsRadioactive;
		
		private string _Rua;
		
		private int _ShipToId;
		
		private System.Nullable<bool> _ShipToOnsite;
		
		private string _ShipToName;
		
		private string _ShipToEmail;
		
		private int _ShippingMethodId;
		
		private System.Nullable<System.DateTime> _DateNeeded;
		
		private bool _OkayToBackorder;
		
		private bool _OverLimit;
		
		private string _RequestedAccount;
		
		private System.Nullable<decimal> _FinalTotal;
		
		private System.Nullable<decimal> _FinalShipping;
		
		private System.Nullable<bool> _ShippingIncludedInTotal;
		
		private string _Comments;
		
		private bool _Archived;
		
		private bool _Locked;
		
		private System.Nullable<int> _AgreementType;
		
		private string _AgreementContact;
		
		private string _AgreementContactPhone;
		
		private string _AgreementUCDContact;
		
		private string _AgreementUCDContactPhone;
		
		private string _AgreementStartDate;
		
		private string _AgreementEndDate;
		
		private System.DateTime _LastModified;
		
		private string _LastModifiedBy;
		
		private System.DateTime _SubmittedOn;
		
		private EntitySet<EventMap> _EventMaps;
		
		private EntitySet<MilestoneMap> _MilestoneMaps;
		
		private EntitySet<PiApproval> _PiApprovals;
		
		private EntitySet<Receipt> _Receipts;
		
		private EntitySet<RequestComment> _RequestComments;
		
		private EntitySet<DpoItem> _DpoItems;
		
		private EntityRef<ShippingMethod> _ShippingMethod;
		
		private EntityRef<ShipToAddress> _ShipToAddress;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnFriendlyUniqueIdChanging(string value);
    partial void OnFriendlyUniqueIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnRequesterIdChanging(string value);
    partial void OnRequesterIdChanged();
    partial void OnPurchaserIdChanging(string value);
    partial void OnPurchaserIdChanged();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnRequestTypeChanging(int value);
    partial void OnRequestTypeChanged();
    partial void OnDafisDocChanging(string value);
    partial void OnDafisDocChanged();
    partial void OnDafisPOChanging(string value);
    partial void OnDafisPOChanged();
    partial void OnVendorConfirmationNumChanging(string value);
    partial void OnVendorConfirmationNumChanged();
    partial void OnIsPerishableChanging(System.Nullable<bool> value);
    partial void OnIsPerishableChanged();
    partial void OnIsRadioactiveChanging(System.Nullable<bool> value);
    partial void OnIsRadioactiveChanged();
    partial void OnRuaChanging(string value);
    partial void OnRuaChanged();
    partial void OnShipToIdChanging(int value);
    partial void OnShipToIdChanged();
    partial void OnShipToOnsiteChanging(System.Nullable<bool> value);
    partial void OnShipToOnsiteChanged();
    partial void OnShipToNameChanging(string value);
    partial void OnShipToNameChanged();
    partial void OnShipToEmailChanging(string value);
    partial void OnShipToEmailChanged();
    partial void OnShippingMethodIdChanging(int value);
    partial void OnShippingMethodIdChanged();
    partial void OnDateNeededChanging(System.Nullable<System.DateTime> value);
    partial void OnDateNeededChanged();
    partial void OnOkayToBackorderChanging(bool value);
    partial void OnOkayToBackorderChanged();
    partial void OnOverLimitChanging(bool value);
    partial void OnOverLimitChanged();
    partial void OnRequestedAccountChanging(string value);
    partial void OnRequestedAccountChanged();
    partial void OnFinalTotalChanging(System.Nullable<decimal> value);
    partial void OnFinalTotalChanged();
    partial void OnFinalShippingChanging(System.Nullable<decimal> value);
    partial void OnFinalShippingChanged();
    partial void OnShippingIncludedInTotalChanging(System.Nullable<bool> value);
    partial void OnShippingIncludedInTotalChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnArchivedChanging(bool value);
    partial void OnArchivedChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnAgreementTypeChanging(System.Nullable<int> value);
    partial void OnAgreementTypeChanged();
    partial void OnAgreementContactChanging(string value);
    partial void OnAgreementContactChanged();
    partial void OnAgreementContactPhoneChanging(string value);
    partial void OnAgreementContactPhoneChanged();
    partial void OnAgreementUCDContactChanging(string value);
    partial void OnAgreementUCDContactChanged();
    partial void OnAgreementUCDContactPhoneChanging(string value);
    partial void OnAgreementUCDContactPhoneChanged();
    partial void OnAgreementStartDateChanging(string value);
    partial void OnAgreementStartDateChanged();
    partial void OnAgreementEndDateChanging(string value);
    partial void OnAgreementEndDateChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    #endregion
		
		public Request()
		{
			this._EventMaps = new EntitySet<EventMap>(new Action<EventMap>(this.attach_EventMaps), new Action<EventMap>(this.detach_EventMaps));
			this._MilestoneMaps = new EntitySet<MilestoneMap>(new Action<MilestoneMap>(this.attach_MilestoneMaps), new Action<MilestoneMap>(this.detach_MilestoneMaps));
			this._PiApprovals = new EntitySet<PiApproval>(new Action<PiApproval>(this.attach_PiApprovals), new Action<PiApproval>(this.detach_PiApprovals));
			this._Receipts = new EntitySet<Receipt>(new Action<Receipt>(this.attach_Receipts), new Action<Receipt>(this.detach_Receipts));
			this._RequestComments = new EntitySet<RequestComment>(new Action<RequestComment>(this.attach_RequestComments), new Action<RequestComment>(this.detach_RequestComments));
			this._DpoItems = new EntitySet<DpoItem>(new Action<DpoItem>(this.attach_DpoItems), new Action<DpoItem>(this.detach_DpoItems));
			this._ShippingMethod = default(EntityRef<ShippingMethod>);
			this._ShipToAddress = default(EntityRef<ShipToAddress>);
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUniqueId", DbType="NVarChar(64)")]
		public string FriendlyUniqueId
		{
			get
			{
				return this._FriendlyUniqueId;
			}
			set
			{
				if ((this._FriendlyUniqueId != value))
				{
					this.OnFriendlyUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUniqueId = value;
					this.SendPropertyChanged("FriendlyUniqueId");
					this.OnFriendlyUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequesterId", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string RequesterId
		{
			get
			{
				return this._RequesterId;
			}
			set
			{
				if ((this._RequesterId != value))
				{
					this.OnRequesterIdChanging(value);
					this.SendPropertyChanging();
					this._RequesterId = value;
					this.SendPropertyChanged("RequesterId");
					this.OnRequesterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaserId", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string PurchaserId
		{
			get
			{
				return this._PurchaserId;
			}
			set
			{
				if ((this._PurchaserId != value))
				{
					this.OnPurchaserIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaserId = value;
					this.SendPropertyChanged("PurchaserId");
					this.OnPurchaserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int NOT NULL")]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestType", DbType="Int NOT NULL")]
		public int RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DafisDoc", DbType="NVarChar(64)")]
		public string DafisDoc
		{
			get
			{
				return this._DafisDoc;
			}
			set
			{
				if ((this._DafisDoc != value))
				{
					this.OnDafisDocChanging(value);
					this.SendPropertyChanging();
					this._DafisDoc = value;
					this.SendPropertyChanged("DafisDoc");
					this.OnDafisDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DafisPO", DbType="NVarChar(64)")]
		public string DafisPO
		{
			get
			{
				return this._DafisPO;
			}
			set
			{
				if ((this._DafisPO != value))
				{
					this.OnDafisPOChanging(value);
					this.SendPropertyChanging();
					this._DafisPO = value;
					this.SendPropertyChanged("DafisPO");
					this.OnDafisPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorConfirmationNum", DbType="NVarChar(64)")]
		public string VendorConfirmationNum
		{
			get
			{
				return this._VendorConfirmationNum;
			}
			set
			{
				if ((this._VendorConfirmationNum != value))
				{
					this.OnVendorConfirmationNumChanging(value);
					this.SendPropertyChanging();
					this._VendorConfirmationNum = value;
					this.SendPropertyChanged("VendorConfirmationNum");
					this.OnVendorConfirmationNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPerishable", DbType="Bit")]
		public System.Nullable<bool> IsPerishable
		{
			get
			{
				return this._IsPerishable;
			}
			set
			{
				if ((this._IsPerishable != value))
				{
					this.OnIsPerishableChanging(value);
					this.SendPropertyChanging();
					this._IsPerishable = value;
					this.SendPropertyChanged("IsPerishable");
					this.OnIsPerishableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRadioactive", DbType="Bit")]
		public System.Nullable<bool> IsRadioactive
		{
			get
			{
				return this._IsRadioactive;
			}
			set
			{
				if ((this._IsRadioactive != value))
				{
					this.OnIsRadioactiveChanging(value);
					this.SendPropertyChanging();
					this._IsRadioactive = value;
					this.SendPropertyChanged("IsRadioactive");
					this.OnIsRadioactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rua", DbType="NVarChar(256)")]
		public string Rua
		{
			get
			{
				return this._Rua;
			}
			set
			{
				if ((this._Rua != value))
				{
					this.OnRuaChanging(value);
					this.SendPropertyChanging();
					this._Rua = value;
					this.SendPropertyChanged("Rua");
					this.OnRuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToId", DbType="Int NOT NULL")]
		public int ShipToId
		{
			get
			{
				return this._ShipToId;
			}
			set
			{
				if ((this._ShipToId != value))
				{
					if (this._ShipToAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipToIdChanging(value);
					this.SendPropertyChanging();
					this._ShipToId = value;
					this.SendPropertyChanged("ShipToId");
					this.OnShipToIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToOnsite", DbType="Bit")]
		public System.Nullable<bool> ShipToOnsite
		{
			get
			{
				return this._ShipToOnsite;
			}
			set
			{
				if ((this._ShipToOnsite != value))
				{
					this.OnShipToOnsiteChanging(value);
					this.SendPropertyChanging();
					this._ShipToOnsite = value;
					this.SendPropertyChanged("ShipToOnsite");
					this.OnShipToOnsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string ShipToName
		{
			get
			{
				return this._ShipToName;
			}
			set
			{
				if ((this._ShipToName != value))
				{
					this.OnShipToNameChanging(value);
					this.SendPropertyChanging();
					this._ShipToName = value;
					this.SendPropertyChanged("ShipToName");
					this.OnShipToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToEmail", DbType="NVarChar(256)")]
		public string ShipToEmail
		{
			get
			{
				return this._ShipToEmail;
			}
			set
			{
				if ((this._ShipToEmail != value))
				{
					this.OnShipToEmailChanging(value);
					this.SendPropertyChanging();
					this._ShipToEmail = value;
					this.SendPropertyChanged("ShipToEmail");
					this.OnShipToEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethodId", DbType="Int NOT NULL")]
		public int ShippingMethodId
		{
			get
			{
				return this._ShippingMethodId;
			}
			set
			{
				if ((this._ShippingMethodId != value))
				{
					if (this._ShippingMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingMethodId = value;
					this.SendPropertyChanged("ShippingMethodId");
					this.OnShippingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNeeded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateNeeded
		{
			get
			{
				return this._DateNeeded;
			}
			set
			{
				if ((this._DateNeeded != value))
				{
					this.OnDateNeededChanging(value);
					this.SendPropertyChanging();
					this._DateNeeded = value;
					this.SendPropertyChanged("DateNeeded");
					this.OnDateNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkayToBackorder", DbType="Bit NOT NULL")]
		public bool OkayToBackorder
		{
			get
			{
				return this._OkayToBackorder;
			}
			set
			{
				if ((this._OkayToBackorder != value))
				{
					this.OnOkayToBackorderChanging(value);
					this.SendPropertyChanging();
					this._OkayToBackorder = value;
					this.SendPropertyChanged("OkayToBackorder");
					this.OnOkayToBackorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverLimit", DbType="Bit NOT NULL")]
		public bool OverLimit
		{
			get
			{
				return this._OverLimit;
			}
			set
			{
				if ((this._OverLimit != value))
				{
					this.OnOverLimitChanging(value);
					this.SendPropertyChanging();
					this._OverLimit = value;
					this.SendPropertyChanged("OverLimit");
					this.OnOverLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedAccount", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string RequestedAccount
		{
			get
			{
				return this._RequestedAccount;
			}
			set
			{
				if ((this._RequestedAccount != value))
				{
					this.OnRequestedAccountChanging(value);
					this.SendPropertyChanging();
					this._RequestedAccount = value;
					this.SendPropertyChanged("RequestedAccount");
					this.OnRequestedAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTotal", DbType="Money")]
		public System.Nullable<decimal> FinalTotal
		{
			get
			{
				return this._FinalTotal;
			}
			set
			{
				if ((this._FinalTotal != value))
				{
					this.OnFinalTotalChanging(value);
					this.SendPropertyChanging();
					this._FinalTotal = value;
					this.SendPropertyChanged("FinalTotal");
					this.OnFinalTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalShipping", DbType="Money")]
		public System.Nullable<decimal> FinalShipping
		{
			get
			{
				return this._FinalShipping;
			}
			set
			{
				if ((this._FinalShipping != value))
				{
					this.OnFinalShippingChanging(value);
					this.SendPropertyChanging();
					this._FinalShipping = value;
					this.SendPropertyChanged("FinalShipping");
					this.OnFinalShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingIncludedInTotal", DbType="Bit")]
		public System.Nullable<bool> ShippingIncludedInTotal
		{
			get
			{
				return this._ShippingIncludedInTotal;
			}
			set
			{
				if ((this._ShippingIncludedInTotal != value))
				{
					this.OnShippingIncludedInTotalChanging(value);
					this.SendPropertyChanging();
					this._ShippingIncludedInTotal = value;
					this.SendPropertyChanged("ShippingIncludedInTotal");
					this.OnShippingIncludedInTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementType", DbType="Int")]
		public System.Nullable<int> AgreementType
		{
			get
			{
				return this._AgreementType;
			}
			set
			{
				if ((this._AgreementType != value))
				{
					this.OnAgreementTypeChanging(value);
					this.SendPropertyChanging();
					this._AgreementType = value;
					this.SendPropertyChanged("AgreementType");
					this.OnAgreementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementContact", DbType="NVarChar(64)")]
		public string AgreementContact
		{
			get
			{
				return this._AgreementContact;
			}
			set
			{
				if ((this._AgreementContact != value))
				{
					this.OnAgreementContactChanging(value);
					this.SendPropertyChanging();
					this._AgreementContact = value;
					this.SendPropertyChanged("AgreementContact");
					this.OnAgreementContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementContactPhone", DbType="NVarChar(64)")]
		public string AgreementContactPhone
		{
			get
			{
				return this._AgreementContactPhone;
			}
			set
			{
				if ((this._AgreementContactPhone != value))
				{
					this.OnAgreementContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._AgreementContactPhone = value;
					this.SendPropertyChanged("AgreementContactPhone");
					this.OnAgreementContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementUCDContact", DbType="NVarChar(64)")]
		public string AgreementUCDContact
		{
			get
			{
				return this._AgreementUCDContact;
			}
			set
			{
				if ((this._AgreementUCDContact != value))
				{
					this.OnAgreementUCDContactChanging(value);
					this.SendPropertyChanging();
					this._AgreementUCDContact = value;
					this.SendPropertyChanged("AgreementUCDContact");
					this.OnAgreementUCDContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementUCDContactPhone", DbType="NVarChar(64)")]
		public string AgreementUCDContactPhone
		{
			get
			{
				return this._AgreementUCDContactPhone;
			}
			set
			{
				if ((this._AgreementUCDContactPhone != value))
				{
					this.OnAgreementUCDContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._AgreementUCDContactPhone = value;
					this.SendPropertyChanged("AgreementUCDContactPhone");
					this.OnAgreementUCDContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementStartDate", DbType="NVarChar(64)")]
		public string AgreementStartDate
		{
			get
			{
				return this._AgreementStartDate;
			}
			set
			{
				if ((this._AgreementStartDate != value))
				{
					this.OnAgreementStartDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementStartDate = value;
					this.SendPropertyChanged("AgreementStartDate");
					this.OnAgreementStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementEndDate", DbType="NVarChar(64)")]
		public string AgreementEndDate
		{
			get
			{
				return this._AgreementEndDate;
			}
			set
			{
				if ((this._AgreementEndDate != value))
				{
					this.OnAgreementEndDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementEndDate = value;
					this.SendPropertyChanged("AgreementEndDate");
					this.OnAgreementEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_EventMap", Storage="_EventMaps", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<EventMap> EventMaps
		{
			get
			{
				return this._EventMaps;
			}
			set
			{
				this._EventMaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_MilestoneMap", Storage="_MilestoneMaps", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<MilestoneMap> MilestoneMaps
		{
			get
			{
				return this._MilestoneMaps;
			}
			set
			{
				this._MilestoneMaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_PiApproval", Storage="_PiApprovals", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<PiApproval> PiApprovals
		{
			get
			{
				return this._PiApprovals;
			}
			set
			{
				this._PiApprovals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Receipt", Storage="_Receipts", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<Receipt> Receipts
		{
			get
			{
				return this._Receipts;
			}
			set
			{
				this._Receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestComment", Storage="_RequestComments", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<RequestComment> RequestComments
		{
			get
			{
				return this._RequestComments;
			}
			set
			{
				this._RequestComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_DpoItem", Storage="_DpoItems", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<DpoItem> DpoItems
		{
			get
			{
				return this._DpoItems;
			}
			set
			{
				this._DpoItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingMethod_Request", Storage="_ShippingMethod", ThisKey="ShippingMethodId", OtherKey="Id", IsForeignKey=true)]
		public ShippingMethod ShippingMethod
		{
			get
			{
				return this._ShippingMethod.Entity;
			}
			set
			{
				ShippingMethod previousValue = this._ShippingMethod.Entity;
				if (((previousValue != value) 
							|| (this._ShippingMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingMethod.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._ShippingMethod.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._ShippingMethodId = value.Id;
					}
					else
					{
						this._ShippingMethodId = default(int);
					}
					this.SendPropertyChanged("ShippingMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipToAddress_Request", Storage="_ShipToAddress", ThisKey="ShipToId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ShipToAddress ShipToAddress
		{
			get
			{
				return this._ShipToAddress.Entity;
			}
			set
			{
				ShipToAddress previousValue = this._ShipToAddress.Entity;
				if (((previousValue != value) 
							|| (this._ShipToAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShipToAddress.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._ShipToAddress.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._ShipToId = value.Id;
					}
					else
					{
						this._ShipToId = default(int);
					}
					this.SendPropertyChanged("ShipToAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Request", Storage="_Vendor", ThisKey="VendorId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._VendorId = value.Id;
					}
					else
					{
						this._VendorId = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventMaps(EventMap entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_EventMaps(EventMap entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_MilestoneMaps(MilestoneMap entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_MilestoneMaps(MilestoneMap entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_PiApprovals(PiApproval entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_PiApprovals(PiApproval entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_RequestComments(RequestComment entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_RequestComments(RequestComment entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_DpoItems(DpoItem entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_DpoItems(DpoItem entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUR_Attachments")]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CommentId;
		
		private string _FileName;
		
		private double _FileSizeBytes;
		
		private string _SubmittedBy;
		
		private System.DateTime _SubmittedOn;
		
		private EntityRef<RequestComment> _RequestComment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommentIdChanging(int value);
    partial void OnCommentIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileSizeBytesChanging(double value);
    partial void OnFileSizeBytesChanged();
    partial void OnSubmittedByChanging(string value);
    partial void OnSubmittedByChanged();
    partial void OnSubmittedOnChanging(System.DateTime value);
    partial void OnSubmittedOnChanged();
    #endregion
		
		public Attachment()
		{
			this._RequestComment = default(EntityRef<RequestComment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentId", DbType="Int NOT NULL")]
		public int CommentId
		{
			get
			{
				return this._CommentId;
			}
			set
			{
				if ((this._CommentId != value))
				{
					if (this._RequestComment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIdChanging(value);
					this.SendPropertyChanging();
					this._CommentId = value;
					this.SendPropertyChanged("CommentId");
					this.OnCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSizeBytes", DbType="Float NOT NULL")]
		public double FileSizeBytes
		{
			get
			{
				return this._FileSizeBytes;
			}
			set
			{
				if ((this._FileSizeBytes != value))
				{
					this.OnFileSizeBytesChanging(value);
					this.SendPropertyChanging();
					this._FileSizeBytes = value;
					this.SendPropertyChanged("FileSizeBytes");
					this.OnFileSizeBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOn", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedOn
		{
			get
			{
				return this._SubmittedOn;
			}
			set
			{
				if ((this._SubmittedOn != value))
				{
					this.OnSubmittedOnChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOn = value;
					this.SendPropertyChanged("SubmittedOn");
					this.OnSubmittedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestComment_PUR_Attachment", Storage="_RequestComment", ThisKey="CommentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RequestComment RequestComment
		{
			get
			{
				return this._RequestComment.Entity;
			}
			set
			{
				RequestComment previousValue = this._RequestComment.Entity;
				if (((previousValue != value) 
							|| (this._RequestComment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestComment.Entity = null;
						previousValue.Attachments.Remove(this);
					}
					this._RequestComment.Entity = value;
					if ((value != null))
					{
						value.Attachments.Add(this);
						this._CommentId = value.Id;
					}
					else
					{
						this._CommentId = default(int);
					}
					this.SendPropertyChanged("RequestComment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
