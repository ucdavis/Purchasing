@using Newtonsoft.Json
@using Purchasing.Mvc.Helpers
@model Purchasing.Mvc.Controllers.ReportProcessingTimeByRoleViewModel

@{
    ViewBag.Title = "Processing Time By Role";
    ViewBag.LoadTableTools = true;
}

@section AdditionalScripts
{
    @Scripts.Render("~/bundles/history")
}

<h2>ProcessingTimeByRole</h2>

<script src="https://code.highcharts.com/5/highcharts.js"></script>
<script src="https://code.highcharts.com/5/highcharts-more.js"></script>
<script src="https://code.highcharts.com/5/modules/exporting.js"></script>

<div id="container" style="height: 400px; margin: auto; min-width: 310px; max-width: 600px"></div>

<script>
    var names =  @Html.Raw(JsonConvert.SerializeObject(Model.Columns.NamesInRole));
    var times =  @Html.Raw(JsonConvert.SerializeObject(Model.Columns.PercentilesForRole ));
    $(function () {
        $('#container').highcharts({

            chart: {
                type: 'boxplot'
            },

            title: null,

            legend: {
                enabled: false
            },

            xAxis: {
                categories: names,
                title: {
                    text: 'User (n=#orders)<br/><span style="color: red">Overall mean: ' +  @String.Format("{0:F2}", Model.Columns.AverageTimeToRoleComplete) +'</span>',
                   
                }
            },

            yAxis: {
                title: {
                    text: 'Time to Complete (days)'
                },
                min: 0,
                plotLines: [{
                    value: @Model.Columns.AverageTimeToRoleComplete,
                    color: 'red',
                    width: 1,
                }]
            },
            credits: {
                enabled: false
            },
            series: [{
                name: 'Observations',
                data: times,
                tooltip: {
                    headerFormat: '<em>User {point.key}</em><br/>'
                }
            }]

        });
    });
</script>


<div class="">
    <div class="dt-table-filter-header display-form">
        <div class="section-text">
            <p> Workgroups with (Admin) after them will get all orders in child workgroups. </p>
            <p> Only completed orders that were created in the month selected will be displayed. </p>
            <p> If there were multiple ReRoutes, only the last one will be used. </p>
        </div>
        <div class="section-contents">
            @using (Html.BeginForm("ProcessingTimeByRole", "Report", FormMethod.Get))
            {
                <ul>
                    <li class="datepicker">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StartDate)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.StartDate, new Dictionary<string, object> { { "data-val", false }, { "class", "datepicker" }, {"Value", Model.StartDate.Value.ToShortDateString()} })
                        </div>
                    </li>
                    <li class="datepicker">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EndDate)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.EndDate, new Dictionary<string, object> { { "data-val", false }, { "class", "datepicker" }, { "Value", Model.EndDate.Value.ToShortDateString() } })
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.Label("Role")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(a => a.Role, SelectLists.RoleList)
                        </div>
                    </li>
                    <li>
                        &nbsp;
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.Label("Workgroup")
                        </div>
                        <div class="editor-field">
                            @this.Select("WorkgroupId").Options(Model.Workgroups.OrderBy(x => x.Name), x => x.Id, x => x.NameAndAdmin).Selected(Model.Workgroup != null ? Model.Workgroup.Id.ToString() : string.Empty).FirstOption("--Select Workgroup--")
                        </div>
                    </li>
                    
                    <li>&nbsp;</li>
                    <li>&nbsp;</li>
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="editor-field">
                            <input class="button" type="submit" style="float: right" value="Apply" />
                        </div>
                    </li>


                </ul>
            }
        </div>
    </div>

</div>

<table class="dt-table no-icon-table">
    <thead>
        <tr>
            <th>View</th>
            <th>
                Date Created
            </th>
            <th>
                Workgroup
            </th>
            <th>Time to Completion</th>
            <th>Time to Approve</th>
            <th>Approve</th>
            <th>Time to Account Manager</th>
            <th>Account Manager</th>
            <th>Time to Purchaser</th>
            <th>Purchaser</th>
            <th>Exception Status</th>

        </tr>
    </thead>
    <tbody>
        @{ var odd = false; }
        @foreach (var item in Model.Columns.OrderTrackingEntities)
        {
            <tr class="@(odd ? "odd" : "even")">
                <td>
                    <a href='@Url.Action("Review", "Order", new {id=item.OrderId})' class="ui-icon ui-icon-document" title="Review order" target="_blank"></a>
                </td>
                <td>
                    @item.OrderCreated.ToShortDateString()
                </td>
                <td>
                    @item.WorkgroupName
                </td>

                <td>
                    @if (item.MinutesToCompletion != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToCompletion.Value).ToString("dd'd:'hh'h:'mm'm'")
                    }
                </td>
                <td>
                    @if (item.MinutesToApprove != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToApprove.Value).ToString("dd'd:'hh'h:'mm'm'")
                    }
                </td>
                <td>
                    @item.ApproverName
                </td>
                <td>
                    @if (item.MinutesToAccountManagerComplete != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToAccountManagerComplete.Value).ToString("dd'd:'hh'h:'mm'm'")
                    }
                </td>
                <td>
                    @item.AccountManagerName
                </td>
                <td>
                    @if (item.MinutesToPurchaserComplete != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToPurchaserComplete.Value).ToString("dd'd:'hh'h:'mm'm'")
                    }
                </td>
                <td>
                    @item.PurchaserName
                </td>
                <td>
                    @if (item.StatusCode != "CP")
                    {
                        @item.Status
                    }
                </td>
            </tr>
                    odd = !odd;
        }
    </tbody>
</table>