@using Purchasing.Mvc.Models
@model WorkgroupVendorViewModel

@{
    ViewBag.Title = Model.WorkgroupVendor.Workgroup.Name;
    ViewBag.StepName = "Add Vendor(s)";
    ViewBag.Previous = Url.Action("Vendors", "Wizard", new { id = Model.WorkgroupVendor.Workgroup.Id });
    ViewBag.Skip = Url.Action("Vendors", "Wizard", new { id = Model.WorkgroupVendor.Workgroup.Id });
    ViewBag.IsAdministrative = Model.WorkgroupVendor.Workgroup.Administrative;
    ViewBag.IsAccountSync = false;
}
@section AdditionalScripts
{
    <script type="text/javascript">
        $(function () {
            $("#WorkgroupVendor_Name").change(function () {
                checkDuplicates($("#loader-name"));
            });
            $("#WorkgroupVendor_Line1").change(function () {
                checkDuplicates($("#loader-line1"));
            });
        });

        function checkDuplicates(loader) {
            var id = '@Model.WorkgroupVendor.Workgroup.Id';
            var name = $("#WorkgroupVendor_Name").val();
            var line1 = $("#WorkgroupVendor_Line1").val();
            var url = '@Url.Action("CheckDuplicateVendor", "Workgroup")';
            loader.toggle();
            $.get(url, { workgrougpId: id, name: name, line1: line1 }, function (result) {
                loader.toggle();
                if (result) {
                    $("#duplicateCheck").html(result.message);
                } else {
                    alert("There was a problem checking for duplicate vendors");
                }
            });
        }

        $(function () {
            $("#toggle-address").click(function () {

                var buttonSpan = $(this).children();
                var addressSet = $("#vendor-address-fieldset");

                if (addressSet.data("enabled")) {
                    $("#skipAddress").val(true);
                    $("#WorkgroupVendor_Line1", addressSet).val("N/A");
                    $("#WorkgroupVendor_City", addressSet).val("N/A");
                    $("#WorkgroupVendor_State", addressSet).val("CA");
                    $("#WorkgroupVendor_Zip", addressSet).val("95616");
                    $("#WorkgroupVendor_CountryCode", addressSet).val("US");

                    $("input", addressSet).prop("disabled", true);

                    buttonSpan.html("Needs Address?");
                    addressSet.data("enabled", false);
                } else {
                    $("#skipAddress").val(false);
                    $("input", addressSet).val("");
                    $("#WorkgroupVendor_CountryCode", addressSet).val("US");
                    $("input", addressSet).prop("disabled", false);

                    buttonSpan.html("No Address?");
                    addressSet.data("enabled", true);
                }

            });
        });
    </script>
}


    @await Html.PartialAsync("_StatusBar", Model.WorkgroupVendor.Workgroup.Id)
    
    @{
        var helpText = "To add a non KFS vendor enter the fields below.</br></br>" +
                       "<strong>If a non-KFS Vendor is used for an order that goes through KFS, it will have to be added to that system.</strong>";
    }
    


@using (Html.BeginForm())
{
    @Html.Hidden("skipAddress", false)
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.Hidden("newVendor", true)
    @Html.Hidden("WorkgroupVendor.Workgroup", Model.WorkgroupVendor.Workgroup.Id)
    @await Html.PartialAsync("_Navigation")
    <section class="ui-corner-all">
    
        <header class="ui-corner-top ui-widget-header">New Vendor <a href="#" id="help-vendor-page" class="ui-icon ui-icon-help showTip" title="@helpText" ></a></header>
          
            <div class="section-text">
                <p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
            </div>
        <div class="section-contents">  
            
            <fieldset>
                <ul>
                    <li>
                        <div class="editor-label required">
                            @Html.LabelFor(model => model.WorkgroupVendor.Name)<span>*</span> 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Name)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Name)
                            <span id="loader-name" style="display: none;"><img src='@Url.Image("ajax-loader.gif")'/></span>
                            <span id="duplicateCheck" class="red bold"></span>
                        </div>
                    </li>
                </ul>
            </fieldset>
            <fieldset id="vendor-address-fieldset" data-enabled="true">
                <ul>
                    <li>
                        <a class="button" id="toggle-address" style="float:right">No Address?</a>
                    </li>
 
                    <li>
                        <div class="editor-label required">
                            @Html.LabelFor(model => model.WorkgroupVendor.Line1)<span>*</span> 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Line1)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Line1)
                            <span id="loader-line1" style="display: none;"><img src='@Url.Image("ajax-loader.gif")'/></span>
                        </div>
                    </li>
		
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.WorkgroupVendor.Line2) 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Line2)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Line2)
                        </div>
                    </li>
		
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.WorkgroupVendor.Line3) 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Line3)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Line3)
                        </div>
                    </li>
		
                    <li>
                        <div class="editor-label required">
                            @Html.LabelFor(model => model.WorkgroupVendor.City)<span>*</span> 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.City)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.City)
                        </div>
                    </li>
		
                    <li>
                        <div class="editor-label required">
                            @Html.LabelFor(model => model.WorkgroupVendor.State)<span>*</span> 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.State)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.State)
                        </div>
                    </li>
		
                    <li>
                        <div class="editor-label required">
                            @Html.LabelFor(model => model.WorkgroupVendor.Zip)<span>*</span> 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Zip)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Zip)
                        </div>
                    </li>
		
                    <li>
                        <div class="editor-label required">
                            @Html.LabelFor(model => model.WorkgroupVendor.CountryCode)<span>*</span> 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.CountryCode)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.CountryCode)
                        </div>
                    </li>
                </ul> 
            </fieldset>
            <fieldset>
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.WorkgroupVendor.Phone) 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Phone)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Phone)
                        </div>
                    </li>   
                
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.WorkgroupVendor.Fax) 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Fax)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Fax)
                        </div>
                    </li>
                
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.WorkgroupVendor.Email) 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Email)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Email)
                        </div>
                    </li>
                    
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.WorkgroupVendor.Url) 
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.WorkgroupVendor.Url)
                            @Html.ValidationMessageFor(model => model.WorkgroupVendor.Url)
                        </div>
                    </li>
                </ul>
            </fieldset>

        </div>


    </section>
    
     @await Html.PartialAsync("_Navigation")
       
}