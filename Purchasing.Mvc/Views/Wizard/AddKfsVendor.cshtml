@using Purchasing.Mvc.Models
@model WorkgroupVendorViewModel

@{
    ViewBag.Title = Model.WorkgroupVendor.Workgroup.Name;
    ViewBag.StepName = "Add Vendor(s)";
    ViewBag.Previous = Url.Action("Vendors", "Wizard", new { id = Model.WorkgroupVendor.Workgroup.Id});
    ViewBag.Skip = Url.Action("Vendors", "Wizard", new { id = Model.WorkgroupVendor.Workgroup.Id });
    ViewBag.IsAdministrative = Model.WorkgroupVendor.Workgroup.Administrative;
    ViewBag.IsAccountSync = Model.WorkgroupVendor.Workgroup.SyncAccounts;
}


    @await Html.PartialAsync("_StatusBar", Model.WorkgroupVendor.Workgroup.Id)
    
    @{
        var helpText = "To add a existing Campus Vendor to this workgroup, type part of the vendor name or vendor Id in the Campus vendor field. After at least 3 characters are entered a list of matches will appear. Select one of these.</br></br>" +
            "After the vendor is selected, choose the appropriate Vendor Address.</br></br>" +
            "The Next button will save the vendor and return you to the list of vendors added so far.";
    }


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
    @Html.Hidden("newVendor", false)
    @Html.Hidden("WorkgroupVendor.Workgroup", Model.WorkgroupVendor.Workgroup.Id)
     @await Html.PartialAsync("_Navigation")
    <section class="ui-corner-all">
	    <header class="ui-corner-top ui-widget-header">Campus Vendor <a href="#" id="help-kfsvendor-page" class="ui-icon ui-icon-help showTip" title="@helpText" ></a></header>
        
		    <div class="section-text">
			    <p>Selecting from the below drop downs will associate this vendor with Aggie Enterprise records and will automatically associate orders with campus vendors when submitted to Aggie Enterprise.</p>
		    </div>
	    <div class="section-contents">

		    <ul>
				<li>
                    <div class="editor-label required">@Html.LabelFor(a => a.WorkgroupVendor.AeSupplierNumber)</div>
                    <div class="editor-field required wide500">
                        @*@Html.Select("WorkgroupVendor.VendorId", o => o.Options(Model.Vendors, x => x.Id, x => x.Name).FirstOption("--Select Vendor--").Selected(Model.WorkgroupVendor.VendorId))*@

                        <input type="text" id="VendorSearch" class="wide500" />
                        @Html.Hidden("WorkgroupVendor.AeSupplierNumber")<span>*</span>

                        @Html.ValidationMessageFor(a => a.WorkgroupVendor.AeSupplierNumber)
                        <span id="loader-image" style="display: none;"><img src='@Url.Image("ajax-loader.gif")'/></span>
				    </div>
			    </li>

                <li>
                    <div class="editor-label required">@Html.LabelFor(a => a.WorkgroupVendor.VendorAddressTypeCode)</div>
                    <div class="editor-field required wide500">
                        @Html.Select("WorkgroupVendor.AeSupplierSiteCode", o => o.FirstOption("--Select Address--").Options(Model.VendorAddresses).Selected(Model.WorkgroupVendor.AeSupplierSiteCode).Disabled(true))<span>*</span>
                        @Html.ValidationMessageFor(a => a.WorkgroupVendor.AeSupplierSiteCode)
                    </div>
                </li>

		    </ul>

	    </div>


    </section>
       
    @await Html.PartialAsync("_Navigation")
}

<script type="text/javascript">
    $(function () {
        var kfsVendor = '@Model.WorkgroupVendor.AeSupplierNumber';
        var kfsVendorNameAndId = '@Model.WorkgroupVendor.Name' + ' (' + kfsVendor + ')';
        if (kfsVendor != '') {
            $("#VendorSearch").val(kfsVendorNameAndId);
            searchVendorAddress(kfsVendor);
        }


        $("#VendorSearch").autocomplete({
            source: function (request, response) {
                $("#loader-image").toggle();
                var searchUrl = '@Url.Action("SearchVendor", "WorkgroupVendor")';

                $.getJSON(searchUrl, { searchTerm: request.term }, function (results) {

                    response($.map(results, function (item) {
                        return {
                            label: item.Name,
                            value: item.Id
                        };
                    }));
                    $("#loader-image").toggle();
                });
            },
            minLength: 3,
            select: function (event, ui) {


                // set the selected vendor
                $("#WorkgroupVendor_AeSupplierNumber").val(ui.item.value);

                // display the vendor's name
                $(this).val(ui.item.label);

                // search for an address
                searchVendorAddress(ui.item.value);

                return false;

            }
        });

    });

    function searchVendorAddress(vendorId) {
        
        var vendorAddressUrl = '@Url.Action("SearchVendorAddress", "WorkgroupVendor")';

        $.getJSON(vendorAddressUrl, { vendorId: vendorId }, function (results) {
            
            // clear the current options
            $("#WorkgroupVendor_AeSupplierSiteCode option:not(:first)").remove();

            var select = $("#WorkgroupVendor_AeSupplierSiteCode");
            
            if (results.length > 0) {

               
                $.each(results, function (index, item) {
                
                    var option = $("<option>").val(item.Id).html(item.Name);
                    select.append(option);

                });

                
                // activate control
                select.removeAttr("disabled");
               
            }
            else {
                // deactivate select
                
                select.attr("disabled", "disabled");
            }
            

        });
    }

</script>

<script id="select-option-template" type="text/x-jquery-tmpl">
<option value="${id}">${name}</option>
</script>