@using Purchasing.Mvc.Helpers
@model ReviewOrderViewModel

@using Microsoft.Extensions.Configuration
@inject IConfiguration configuration


<section id="order-details" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header showInNav">
        <a href="#" class="ui-icon ui-icon-help" title="Order Request Number Is For Internal Use Only" style="float:left;" ></a>&nbsp;&nbsp;
        <span style="float:none">Request # @Model.Order.RequestNumber</span>
    </header>
    
    <div class="section-contents">

        <div class="col1">
        
            <ul>
                <li><span>Current Review Level:</span><strong>@Model.Status</strong></li>
                @if (!Model.Order.Workgroup.IsActive)
                {
                    <li><span>Workgroup:</span><strong style="color: red" title="This workgroup is not active.">@Model.WorkgroupName</strong></li>
                }
                else
                {
                    <li><span>Workgroup:</span><strong>@Model.WorkgroupName</strong></li>    
                }    
                <li><span>Department:</span><strong>@Model.OrganizationName</strong></li>
                <li><span>Date Needed:</span><strong>@Model.Order.DateNeeded.ToString("d")</strong></li>
                
                @{
                    
                    var shipping = Model.Order.ShippingType.Name;
                    if (shipping != null && shipping.Length > 13)
                    {
                        shipping = string.Format("<abbr title='{0}'>{1}</abbr>", Model.Order.ShippingType.Name, shipping.Substring(0, 13) + "...");
                    }
                }
                <li><span>Shipping:</span><strong> @Html.Raw(shipping) <span style="@(Model.Order.AllowBackorder ? "color: green" : "color: red")">@(Model.Order.AllowBackorder ? "(Allow Backorder)"  : "(No Backorder)")</span></strong></li>
                
                <li>
                    <span>Tag:</span><strong id="tag" style="width:auto;">
                        @(string.IsNullOrWhiteSpace(Model.Order.Tag) ? "[None]" : Model.Order.Tag)
                </strong>
                @if (ViewBag.HideEditDialogue == null || (bool)ViewBag.HideEditDialogue == false)
                {
                    <a id="edit-tag" href="#" class="ui-icon ui-icon-pencil" title="Edit Tag"></a>
                }
                <a href="#" class="ui-icon ui-icon-help" title="Tag is a free text field that can be used for external reference numbers (non-kfs), tracking numbers, or any other order-specific information. Can be shown on the order history page and filtered/sorted on." style="float:inherit"></a>

            </li>
            
                @if (Model.Order.StatusCode.IsComplete)
                {
                    <li>
                        <span>Reference #:</span><strong id="reference-number" style="width:auto;">
                                                     @(string.IsNullOrWhiteSpace(Model.Order.ReferenceNumber) ? "[None]" : Model.Order.ReferenceNumber)
                                                 </strong>
                        @if (ViewBag.HideEditDialogue == null || (bool)ViewBag.HideEditDialogue == false)
                        {
                            <a id="edit-reference-number" href="#" class="ui-icon ui-icon-pencil" title="Edit Reference Number"></a>
                        }
                    </li>
                    <li>
                        <span>PO #:</span><strong id="po-number" style="width:auto;">
                            @(string.IsNullOrWhiteSpace(Model.Order.PoNumber) ? "[None]" : Model.Order.PoNumber)
                        </strong>
                        @if (ViewBag.HideEditDialogue == null || (bool)ViewBag.HideEditDialogue == false)
                        {
                            <a id="edit-po-number" href="#" class="ui-icon ui-icon-pencil" title="Edit PO Number"></a>
                        }
                    </li>       
                                 
                    <li>
                        <span>Order Type:</span><strong>@Model.Order.OrderType.Name @(!string.IsNullOrEmpty(Model.Order.KfsDocType) ? string.Format("({0})", Model.Order.KfsDocType) : string.Empty)</strong>
                    </li>
                    if (Model.Complete)
                     {
                         <li>
                             
                             <span>Post Order Status:</span><span style="white-space:nowrap">
                                 @if (Model.CanAssignApUser && (ViewBag.HideEditDialogue == null || (bool)ViewBag.HideEditDialogue == false))
                                 {
                                     @Html.DropDownListFor(a => a.Order.PostStatus, SelectLists.PostStatusList, new { @class = "PostStatusDDL" })
                                     <span class="poststatus-loader" style="display: none;">
                                         <img src='@Url.Image("ajax-loader.gif")' />
                                     </span>
                                     <span id="poststatus-ok" style="display: none;">
                                         <a href="#" class="ui-icon ui-icon-check"></a>
                                     </span>

                                 }
                                 else
                                 {
                                     <strong>@Model.Order.PostStatus</strong>
                                 }
                             </span>

                         </li>
                     }
                    <li>
                        <span>Order Notes:</span><strong id="orderNote" style="width:auto;">@(string.IsNullOrWhiteSpace(Model.Order.OrderNote) ? "[None]" : Model.Order.OrderNote)</strong>
                        <a id="edit-ordernotes" href="#" class="ui-icon ui-icon-pencil" title="Edit Order Notes"></a>
                        
                        <a href="#" class="ui-icon ui-icon-help" title="Order Notes is a free text field that can be used for short notes to track order after placed by the purchaser. Limited to 140 charactors, it can be shown on the order history page and filtered/sorted on." style="float:inherit"></a>

                    </li>
                }
                
                <li><span>Justification:</span><strong>@Model.Order.Justification</strong></li>

            </ul>

        </div>

        <div class="col2">
        
            <section id="vendor" class="display-form ui-corner-all">
            
                <header class="ui-corner-top ui-widget-header">Vendor:</header>

                <div class="section-contents">
                
                    @if (Model.Vendor != null)
                    {
                        <div class="vcard">
    
                            <div class="fn">@Model.Vendor.Name
                                @if (!string.IsNullOrEmpty(Model.Vendor.AeSupplierNumber))
                                {
                                    <div>(Supplier #: @Model.Vendor.AeSupplierNumber Site Code: @Model.Vendor.AeSupplierSiteCode)</div>
                                }else if (!string.IsNullOrEmpty(Model.Vendor.VendorId))
                                {
                                    //TODO: Change /kfs-prd/ to /fin/
                                    //I can't test it now to see if it works, but hopefully moving that part to the config setting will be enough
                                    var kfsLookup = string.Format("{0}/kr/inquiry.do?businessObjectClassName=org.kuali.kfs.vnd.businessobject.VendorDetail&methodToCall=start&vendorDetailAssignedIdentifier=0&vendorHeaderGeneratedIdentifier={1}", configuration["AfsLookupUrl"],Model.Vendor.VendorId);                                    
                                    <span>(KFS Id: <a href="@kfsLookup" target="_blank"> @Model.Vendor.VendorId</a>)</span>
                                }
                                else{
                                    <span>(Generic Vendor)</span>
                                }


                            </div>
                            <div class="adr">
                                <span class="street-address">@Model.Vendor.Line1</span>
                                <span class="street-address">@Model.Vendor.Line2</span>
                                <span class="street-address">@Model.Vendor.Line3</span>
                                <span class="locality">@Model.Vendor.City</span>
                                <span class="region" title="State">@Model.Vendor.State</span>
                                <span class="postal-code">@Model.Vendor.Zip</span>
                                <span class="country-code">@Model.Vendor.CountryCode</span>
                            </div>
                            @if (!string.IsNullOrWhiteSpace(Model.Vendor.Phone) || !string.IsNullOrWhiteSpace(Model.Vendor.Fax))
                            {
                                <div class="phone">
                                    @if (!string.IsNullOrWhiteSpace(Model.Vendor.Phone) || !string.IsNullOrWhiteSpace(Model.Vendor.Fax))
                                    {
                                        <span>Ph: @Model.Vendor.Phone</span>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(Model.Vendor.Fax))
                                    {
                                        <span>Fax: @Model.Vendor.Fax</span>
                                    }
                                </div>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.Vendor.Url) || !string.IsNullOrWhiteSpace(Model.Vendor.Email))
                            {
                                <div class="url">
                                    @if (!string.IsNullOrWhiteSpace(Model.Vendor.Url))
                                    {

                                        var validUrl = Uri.IsWellFormedUriString(Model.Vendor.Url, UriKind.Absolute);
                                        if (validUrl)
                                        {
                                            <a href="@Model.Vendor.Url" target="_blank">@Model.Vendor.Url</a>
                                        }
                                        else
                                        {
                                            var prependUrl = string.Format("http://{0}", Model.Vendor.Url);
                                            var validUrl2 = Uri.IsWellFormedUriString(prependUrl, UriKind.Absolute);
                                            if (validUrl2)
                                            {
                                                 <a href="@prependUrl" target="_blank">@Model.Vendor.Url</a>
                                            }
                                            else
                                            {
                                                @Model.Vendor.Url
                                            }
                                        }
                                    }
                                   @if (!string.IsNullOrWhiteSpace(Model.Vendor.Url) && !string.IsNullOrWhiteSpace(Model.Vendor.Email))
                                   {
                                       @Html.Encode(" | ");
                                   } 
                                    @if (!string.IsNullOrWhiteSpace(Model.Vendor.Email))
                                    {
                                        <a href="mailto: @Model.Vendor.Email">@Model.Vendor.Email</a>
                                    }
                                </div>
                            }

                        </div>
                    }
                    else
                    {
                        <div>-- Unspecified --</div>
                    }

                </div>

            </section>
            <div>
                <section id="deliveryTo" class="display-form ui-corner-all">
                    <header class="ui-corner-top ui-widget-header">Deliver To:</header>
                    <div class="section-contents">
                        <div class="vcard">
    
                            <div class="fn">@Model.Order.DeliverTo</div>                            
                            <div class="email"><a href="mailto: @string.Format("{0}?subject=PrePurchasing Order {1} &body={2}://{3}{4}{1}", Model.Order.DeliverToEmail, Model.Order.RequestNumber, (@Context.Request.IsHttps ? "https" : "http"), @Context.Request.Host, "/Order/Lookup/") ">@Model.Order.DeliverToEmail</a></div>
                            <div class="adr">
                                <span class="street-address">@Model.Address.Room @Model.Address.Building</span>                             
                                <span class="street-address">@Model.Address.Address</span>
                                <span class="locality">@Model.Address.City</span>
                                <span class="region" title="California">@Model.Address.State</span>
                                <span class="postal-code">@Model.Address.Zip</span>
                            </div>
                             @if (string.IsNullOrWhiteSpace(Model.Address.AeLocationCode))
                            {
                                <div class="red" title="If a location Code is not used, a shipping address will need to be manually added to Aggie Enterprise orders.">Warning. No Campus Location Code.</div>
                            }
                            else
                            {
                                <span class="green locality">Campus Location: @Model.Address.AeLocationCode</span>
                            }
                            @if (!string.IsNullOrEmpty(Model.Order.DeliverToPhone) || !string.IsNullOrEmpty(Model.Address.Phone))
                            {
                                <div class="phone">
                                    <span>Ph: @(!string.IsNullOrEmpty(Model.Order.DeliverToPhone) ? Model.Order.DeliverToPhone : Model.Address.Phone)</span>
                                </div>
                            }
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</section>

<div id="modify-reference-number-dialog" title="Modify Reference Number" style="display: none;">
    <form>
        <section>
            <div class="section-text">
                <p>Assign this order a new reference number and then click 'Assign Reference Number'</p>
                <p>Note: If this is a KFS order, changing this value may unlink the order.</p>
            </div>
            <div class="section-contents">
                <ul>
                    <li><div class="editor-label required">Reference Number: <span class="required">*</span></div>
                        <div class="editor-field">
                            <input type="text" id="new-reference-number" placeholder="reference number" maxlength="50"></input>
                        </div>
                    </li>
                </ul>
            </div> 
        </section>
    </form>
</div>

<div id="modify-po-number-dialog" title="Modify PO Number" style="display: none;">
    <form>
        <section>
            <div class="section-text">
                <p>Assign this order a new po number and then click 'Assign PO Number'</p>
            </div>
            <div class="section-contents">
                <ul>
                    <li><div class="editor-label required">PO Number: <span class="required">*</span></div>
                        <div class="editor-field">
                            <input type="text" id="new-po-number" placeholder="po number" maxlength="50" value="@Model.Order.PoNumber"></input>
                        </div>
                    </li>
                </ul>
            </div> 
        </section>
    </form>
</div>

<div id="modify-tag-dialog" title="Modify Order Tag" style="display: none;">
    <form>
        <section>
            <div class="section-text">
                <p>Assign this order a new tag and then click 'Assign Tag'</p>
                <p>Tag is a free text field that can be used for external reference numbers (non-kfs), tracking numbers, or any other order-specific information. Can be shown on the order history page and filtered/sorted on.</p>
            </div>
            <div class="section-contents">
                <ul>
                    <li><div class="editor-label required">Tag: <span class="required">*</span></div>
                        <div class="editor-field">
                            <input type="text" id="new-tag" placeholder="order tag" maxlength="256" value="@Model.Order.Tag" />
                        </div>
                    </li>
                </ul>
            </div> 
        </section>
    </form>
</div>

<div id="modify-ordernotes-dialog" title="Modify Order Notes" style="display: none;">
    <form>
        <section>
            <div class="section-text">
                <p>Assign this order a new note and then click 'Assign Note'</p>
                <p>Order Notes is a free text field that can be used for short notes to track order after placed by the purchaser. Limited to 140 charactors, it can be shown on the order history page and filtered/sorted on.</p>
            </div>
            <div class="section-contents">
                <ul>
                    <li>
                        <div class="editor-label required">Order Note: <span class="required">*</span></div>
                        <div class="editor-field">
                            <input type="text" id="new-ordernote" placeholder="order note" maxlength="140" value="@Model.Order.OrderNote" />
                        </div>
                    </li>
                </ul>
            </div>
        </section>
    </form>
</div>
