@model Purchasing.Web.Controllers.DepartmentalAdminRequestViewModel
           
    <section class="display-form">
    <header class="ui-widget-header ui-corner-top">User Details</header>
        <ul>
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.UserExists)
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.UserExists)						
                </div>
            </li>          
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.UserIsAlreadyDA)
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.UserIsAlreadyDA)						
                </div>
            </li>  
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.DateCreated)
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.DepartmentalAdminRequest.DateCreated)						
                </div>
            </li>
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.RequestCount)
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.DepartmentalAdminRequest.RequestCount)						
                </div>
            </li>            
        </ul>
    </section>
    
<section class="display-form">
	<header class="ui-widget-header ui-corner-top">Request Departmental Admin</header>

	<div class="section-contents">

        <ul>
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.FirstName)
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.DepartmentalAdminRequest.FirstName)						
                </div>
            </li>
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.LastName) 
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.DepartmentalAdminRequest.LastName)						
                </div>
            </li>	
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.Email) 
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.DepartmentalAdminRequest.Email)
                    @{
                        var url = string.Format("http://www.ucdavis.edu/search/directory_results.shtml?filter={0}", Model.DepartmentalAdminRequest.Email);
                    }
                    <a class="button" href="@url" target="_blank">Lookup</a>

                </div>
            </li>
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.PhoneNumber) 
                </div>
                <div class="display-details">
                    @Html.DisplayFor(model => model.DepartmentalAdminRequest.PhoneNumber)
                </div>
            </li>					
            <li>
                <div class="display-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.DepartmentSize)
                </div>
                <div class="display-details">
                    @switch(Model.DepartmentalAdminRequest.DepartmentSize)
                    {
                        case 0:
                            @Html.Encode("Small (Less than 50 users)");
                            break;
                        case 1:
                            @Html.Encode("Medium (50-100 users)");
                            break;
                        case 2:
                            @Html.Encode("Medium (50-100 users)");
                            break;
                        default:
                            @Html.Encode("Error Unexpected value");
                            break;
                    }

                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.DepartmentalAdminRequest.SharedOrCluster) 
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.DepartmentalAdminRequest.SharedOrCluster)
                    @Html.ValidationMessageFor(model => model.DepartmentalAdminRequest.SharedOrCluster)
                </div>
            </li>
            <li>
                <div class="editor-label">@Html.LabelFor(x => x.Organizations)</div>
                <select id="User_Organizations" name="orgs" multiple="" >
                    @if (Model.Organizations != null)
                    {
                        foreach (var a in Model.Organizations)
                        {
                            <option selected="" value="@a.Id">@(string.Format("{0} ({1})", a.Name, a.Id))</option>
                        }
                    }                   
                </select>                
            </li>	
            @if (Model.UserIsAlreadyDA)
            {
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MergeExistingOrgs) 
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.MergeExistingOrgs)
                        @Html.ValidationMessageFor(model => model.MergeExistingOrgs)
                    </div> 
                </li>
                <li>
                    <div class="editor-label">@Html.LabelFor(x => x.ExistingOrganizations)</div>
                    <select id="Existing_Organizations" name="existingOrgs" multiple="" >
                        @if (Model.ExistingOrganizations != null)
                        {
                            foreach (var a in Model.ExistingOrganizations)
                            {
                                <option selected="" value="@a.Id">@(string.Format("{0} ({1})", a.Name, a.Id))</option>
                            }
                        }                   
                    </select>                
                </li>
            }					
            <li>
                @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
                <div class="editor-label">&nbsp;</div>
                <div class="editor-field">
                    <input class="button" type="submit" value=@ViewBag.Title /> | @Html.ActionLink("Cancel", "Index")
                </div>
            </li>
        </ul>

	</div>

	<footer class="ui-corner-bottom"></footer>

</section>






