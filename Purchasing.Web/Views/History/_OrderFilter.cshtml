@model FilteredOrderListModelDto

@{
    string isChecked;
}


<div class="">
<div class="dt-table-filter-header display-form">
    <!--<header class="ui-widget-header ui-corner-top"></header>-->
    <div class="section-contents">

    @using (Html.BeginForm((string)ViewBag.GetMethod, "History", FormMethod.Get))
    {
        <ul>
            <li>
                <div class="editor-label">Filter by Status</div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.SelectedOrderStatus, new SelectList(Model.OrderStatusCodes, "Item1", "Item2"))
               </div>
            </li>
            <li class="checkbox">
                <div class="editor-label">Only show pending</div>
                <div class="editor-field">
                    @{
                        isChecked = string.Empty;
                        if(Model.ShowPending)
                        {
                            isChecked = "checked=\"checked\"";
                        }
                    }
                    @*<input type="checkbox" value="true" @isChecked name="ShowPending"/> <br />*@

                    @Html.CheckBox("ShowPending", Model.ShowPending)

                </div>
            </li>
            @if ((string)ViewBag.GetMethod != "AdminOrders")
            {
                <li class="checkbox">
                    <div class="editor-label">Your Orders</div>
                    <div class="editor-field">
                        @Html.CheckBox("ShowCreated", Model.ShowCreated)
                    </div>
                </li>
            }
            <li class="datepicker">
                <div class="editor-label">
                    @Html.LabelFor(model => model.StartDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.StartDate)
                </div>
            </li>
            <li class="datepicker">
                <div class="editor-label">
                    @Html.LabelFor(model => model.EndDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.EndDate)
                </div>
            </li>
             <li class="datepicker">
                <div class="editor-label">
                    @Html.LabelFor(model => model.StartLastActionDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.StartLastActionDate)
                </div>
            </li>
            <li class="datepicker">
                <div class="editor-label">
                    @Html.LabelFor(model => model.EndLastActionDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.EndLastActionDate)
                </div>
            </li>
            <li class="apply">
                <input class="button" type="submit" value="Apply" />
            </li>
            </ul>
    }
</div>
</div>

</div>
