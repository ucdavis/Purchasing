@using Purchasing.Core.Domain
@model EmailPreferences
<section class="ui-corner-all display-form box-shadow">
    <header class="ui-corner-top ui-widget-header">Account Manager</header>

    <div class="section-contents">

        <ul>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.AccountManagerPurchaserProcessed)
                </div>
                <div class="editor-field showTip" title="An order you approved has completed its progress within our system and either ordered or submitted to campus purchasing.">
                    @Html.EditorFor(model => model.AccountManagerPurchaserProcessed)
                    @Html.ValidationMessageFor(model => model.AccountManagerPurchaserProcessed)
                </div>
            </li>
@*            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.AccountManagerKualiApproved)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.AccountManagerKualiApproved)
                    @Html.ValidationMessageFor(model => model.AccountManagerKualiApproved)
                </div>
            </li>*@
@*            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.AccountManagerOrderCompleted)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.AccountManagerOrderCompleted)
                    @Html.ValidationMessageFor(model => model.AccountManagerOrderCompleted)
                </div>
            </li>*@
            <li>
                <div class="editor-label">@Html.LabelFor(model => model.AccountManagerOrderArrive)</div>
                <div class="editor-field showTip" title="An order has arrived at your level for review. Note: If the order is assigned to any account manager in the workgroup and someone else approves it, you will still get an email, but you will not be able to access the order.">
                    @Html.EditorFor(model => model.AccountManagerOrderArrive)
                    @Html.ValidationMessageFor(model => model.AccountManagerOrderArrive)
                </div>
            </li>
            <li>
                <div class="editor-label">@Html.LabelFor(model => model.ShowAccountInEmail)</div>
                <div class="editor-field showTip" title="When the order is at the Account Manager level, check this if you want account numbers included in the email for that order.">
                    @Html.EditorFor(model => model.ShowAccountInEmail)
                    @Html.ValidationMessageFor(model => model.ShowAccountInEmail)
                </div>
            </li>
        </ul>

    </div>
</section>
