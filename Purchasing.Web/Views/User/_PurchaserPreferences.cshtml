@model Purchasing.Core.Domain.EmailPreferences
<section class="ui-corner-all display-form box-shadow">
    <header class="ui-widget-header ui-corner-top">Purchaser</header>
    
    <div class="section-contents">
        <ul>
@*            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserKualiApproved)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.PurchaserKualiApproved)
                    @Html.ValidationMessageFor(model => model.PurchaserKualiApproved)
                </div>
            </li>*@
@*            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserOrderCompleted)
                </div>
                <div class="editor-field showTip" title="">
                    @Html.EditorFor(model => model.PurchaserOrderCompleted)
                    @Html.ValidationMessageFor(model => model.PurchaserOrderCompleted)
                </div>
            </li>*@
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserOrderArrive)
                </div>
                <div class="editor-field showTip" title="An order has arrived at your level for processing. Note: If the order is assigned to any purchaser in the workgroup and someone else completes it, you will still get an email, but you will not be able to access the order.">
                    @Html.EditorFor(model => model.PurchaserOrderArrive)
                    @Html.ValidationMessageFor(model => model.PurchaserOrderArrive)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserKfsItemReceived)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as received for a KFS order.">
                    @Html.EditorFor(model => model.PurchaserKfsItemReceived)
                    @Html.ValidationMessageFor(model => model.PurchaserKfsItemReceived)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserPCardItemReceived)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as received for a P Card order.">
                    @Html.EditorFor(model => model.PurchaserPCardItemReceived)
                    @Html.ValidationMessageFor(model => model.PurchaserPCardItemReceived)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserCampusServicesItemReceived)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as received for a Campus Services order.">
                    @Html.EditorFor(model => model.PurchaserCampusServicesItemReceived)
                    @Html.ValidationMessageFor(model => model.PurchaserCampusServicesItemReceived)
                </div>
            </li>
            
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserKfsItemPaid)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as paid for a KFS order.">
                    @Html.EditorFor(model => model.PurchaserKfsItemPaid)
                    @Html.ValidationMessageFor(model => model.PurchaserKfsItemPaid)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserPCardItemPaid)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as paid for a P Card order.">
                    @Html.EditorFor(model => model.PurchaserPCardItemPaid)
                    @Html.ValidationMessageFor(model => model.PurchaserPCardItemPaid)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PurchaserCampusServicesItemPaid)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as paid for a Campus Services order.">
                    @Html.EditorFor(model => model.PurchaserCampusServicesItemPaid)
                    @Html.ValidationMessageFor(model => model.PurchaserCampusServicesItemPaid)
                </div>
            </li>
        </ul>
    </div>
</section>
