@model Purchasing.Core.Domain.EmailPreferences

 
<section class="display-form ui-corner-all box-shadow">
    <header class="ui-widget-header ui-corner-top">Requester</header>

    <div class="section-contents">
        <ul>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterOrderSubmission)
                </div>
                <div class="editor-field showTip" title="You've submitted an order and want an email confirmation.">                    
                    @Html.EditorFor(model => model.RequesterOrderSubmission)
                    @Html.ValidationMessageFor(model => model.RequesterOrderSubmission)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterApproverChanged)
                </div>
                <div class="editor-field showTip" title="Approver edits an order you submitted.">
                    @Html.EditorFor(model => model.RequesterApproverChanged)
                    @Html.ValidationMessageFor(model => model.RequesterApproverChanged)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterApproverApproved)
                </div>
                <div class="editor-field showTip" title="A user approves an order to go to account manager stage. Orders that have conditional approvers will generate an email for each approver. You will always be notified when anyone denies your order.">
                    @Html.EditorFor(model => model.RequesterApproverApproved)
                    @Html.ValidationMessageFor(model => model.RequesterApproverApproved)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterAccountManagerChanged)
                </div>
                <div class="editor-field showTip" title="Account manager edits an order you submitted.">
                    @Html.EditorFor(model => model.RequesterAccountManagerChanged)
                    @Html.ValidationMessageFor(model => model.RequesterAccountManagerChanged)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterAccountManagerApproved)
                </div>
                <div class="editor-field showTip" title="A user approves an order to go to purchaser stage. You will always be notified when anyone denies your order.">
                    @Html.EditorFor(model => model.RequesterAccountManagerApproved)
                    @Html.ValidationMessageFor(model => model.RequesterAccountManagerApproved)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterPurchaserChanged)
                </div>
                <div class="editor-field showTip" title="Purchaser edits an order you submitted.">
                    @Html.EditorFor(model => model.RequesterPurchaserChanged)
                    @Html.ValidationMessageFor(model => model.RequesterPurchaserChanged)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterPurchaserAction)
                </div>
                <div class="editor-field showTip" title="Your prepurchasing order has completed its progress within our system and either ordered or submitted to campus purchasing. You will always be notified when anyone denies your order.">
                    @Html.EditorFor(model => model.RequesterPurchaserAction)
                    @Html.ValidationMessageFor(model => model.RequesterPurchaserAction)
                </div>
            </li>
            
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterReceived)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as received.">
                    @Html.EditorFor(model => model.RequesterReceived)
                    @Html.ValidationMessageFor(model => model.RequesterReceived)
                </div>
            </li>
            
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterPaid)
                </div>
                <div class="editor-field showTip" title="Line items have been marked as paid.">
                    @Html.EditorFor(model => model.RequesterPaid)
                    @Html.ValidationMessageFor(model => model.RequesterPaid)
                </div>
            </li>

            @*            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterKualiProcessed)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.RequesterKualiProcessed)
                    @Html.ValidationMessageFor(model => model.RequesterKualiProcessed)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequesterKualiApproved)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.RequesterKualiApproved)
                    @Html.ValidationMessageFor(model => model.RequesterKualiApproved)
                </div>
            </li>*@
        </ul>
    </div>
</section>
