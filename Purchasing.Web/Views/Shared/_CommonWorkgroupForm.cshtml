@using Purchasing.Web.Models
@model WorkgroupModifyModel

<li>    
    <div class="editor-label required">                        
        @Html.LabelFor(model => model.Workgroup.Name)<span>*</span>                        
    </div>
    
    <span class="showTip" title="The name of the workgroup. If a requester has access to more than one workgroup, they will choose from a list of workgroup names.">
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Workgroup.Name, new { @class = "wide200 text-box single-line" })
            @Html.ValidationMessageFor(model => model.Workgroup.Name)
        </div>
    </span>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.Disclaimer)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Workgroup.Disclaimer, new { @class = "text-box multi-line showTip wide600", title = "<strong>Disclaimer</strong> is text that appears on the new order page. It should include information and or links regarding the department's purchasing policies." })
        @Html.ValidationMessageFor(model => model.Workgroup.Disclaimer)
    </div>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.Administrative)
    </div>
    <div class="editor-field">
        <span class="showTip" title="Administrative workgroups can see other workgroups within its own organizations.">@Html.EditorFor(model => model.Workgroup.Administrative)</span>
        @Html.ValidationMessageFor(model => model.Workgroup.Administrative)
    </div>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.IsFullFeatured)
    </div>
    <div class="editor-field">
        <span class="showTip" title="Only allows Approvers/Account Managers/Purchasers.  All standard workgroups below the specified org show up on landing page, and users in this workgroup will receive emails when order requests arrive for each role. If this is selected, must also be administrative.">@Html.EditorFor(model => model.Workgroup.IsFullFeatured)</span>
        @Html.ValidationMessageFor(model => model.Workgroup.IsFullFeatured)
    </div>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.SyncAccounts)
    </div>
    <div class="editor-field">
        <span class="showTip" title="<strong>Synchronize Accounts</strong> from KFS for your organization instead of manually adding accounts.">@Html.EditorFor(model => model.Workgroup.SyncAccounts)</span>
        @Html.ValidationMessageFor(model => model.Workgroup.SyncAccounts)
    </div>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.ForceAccountApprover)
    </div>
    <div class="editor-field">
        <span class="showTip" title="Require the Approver to enter the Account(s) before the order can be approved.<br>Normally this would happen at the account manager stage.">@Html.EditorFor(model => model.Workgroup.ForceAccountApprover)</span>
        @Html.ValidationMessageFor(model => model.Workgroup.ForceAccountApprover)
    </div>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.AllowControlledSubstances)
    </div>
    <div class="editor-field">
        <span class="showTip" title="<strong>Show Controlled Substances Fields</strong> for workgroups that need to purchase controlled substances.">
            @Html.EditorFor(model => model.Workgroup.AllowControlledSubstances)
        </span>
        @Html.ValidationMessageFor(model => model.Workgroup.AllowControlledSubstances)
    </div>
</li>       
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.NotificationEmailList)
    </div>
    <span class="showTip" title="<strong>Notification Email List</strong> Email to receive a notice of a package receipt, in addition to standard user associated with the order.">
        <div class="editor-field">
                        
            @Html.EditorFor(model => model.Workgroup.NotificationEmailList)
                        
            @Html.ValidationMessageFor(model => model.Workgroup.NotificationEmailList)
        </div>
    </span>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.RequireApproval)
    </div>
    <div class="editor-field">
        <span class="showTip" title="If a requester places an order with only external accounts, setting this to yes will ensure that a workgroup approval will not be bypassed.">@Html.EditorFor(model => model.Workgroup.RequireApproval)</span>
        @Html.ValidationMessageFor(model => model.Workgroup.RequireApproval)
    </div>
</li>
<li>
    <div class="editor-label">
        @Html.LabelFor(model => model.Workgroup.DoNotInheritPermissions)
    </div>
    <div class="editor-field">
        <span class="showTip" title="Only for non-admin workgroups. If yes, this workgroup will not inherit any permissions from its admin parent workgroups">@Html.EditorFor(model => model.Workgroup.DoNotInheritPermissions)</span>
        @Html.ValidationMessageFor(model => model.Workgroup.DoNotInheritPermissions)
    </div>
</li>
