@using Purchasing.Web.Models
@model WorkgroupAccountModel

@{
    ViewBag.Title = Model.Workgroup.Name;
    ViewBag.StepName = "Add Account(s)";
    ViewBag.Previous = Url.Action("People", "Wizard", new { id= Model.Workgroup.Id, roleFilter="RV"});
    ViewBag.Skip = Url.Action("Accounts", "Wizard", new {id = Model.Workgroup.Id});
    ViewBag.IsAdministrative = Model.Workgroup.Administrative;
    ViewBag.IsAccountSync = Model.Workgroup.SyncAccounts;
}

@section AdditionalScripts{

    <script type="text/javascript">
        $(function () {

            $("#account_search").autocomplete({

                source: function (request, response) {

                    var url = '@Url.Action("SearchKfsAccounts", "Accounts")';

                    $.getJSON(url, { searchTerm: request.term }, function (result) {

                        var data = $.map(result, function (item) { return { label: item.Name, value: item.Id }; });
                        response(data);

                    });

                },
                minLength: 3,
                select: function (event, ui) {
                    $("#WorkgroupAccount_Account").val(ui.item.value);
                }
            });
        });
    </script>

}

    @{
        var helpText = "You may enter either the account name or number (beginning with the appropriate chart designator). As you type in the account, matching accounts will be suggested in a drop down list. Click on the desired account.</br>" +
                       "You must add the desired approver, account manager, and purchaser to the workgroup for their names to appear in the appropriate drop downs.</br></br>" +
                       "If those people are not selected, it will default to anyone in the workgroup with those roles.";
    }

@Html.Partial("_StatusBar", Model.Workgroup.Id)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
    @Html.Partial("_Navigation")

    <section class="padded">
        <header class="ui-corner-all ui-widget-header">Add Account <a href="#" id="help-accounts-page" class="ui-icon ui-icon-help showTip" title="@helpText" ></a></header>
        
            <div class="section-text">
                <p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
            </div>
        <div class="section-contents">

            <ul>
                <li>
		            <div class="editor-label required">
                        @Html.LabelFor(x => x.WorkgroupAccount.Account)
                        <span>*</span>
					</div>
					<div class="editor-field">						
                        @Html.Hidden("WorkgroupAccount.Account", Model.WorkgroupAccount.Account != null ? Model.WorkgroupAccount.Account.Id : string.Empty)
                        @Html.TextBox("account_search", Model.WorkgroupAccount.Account != null ? Model.WorkgroupAccount.Account.Id : string.Empty, new {placeholder="Account name or number"})
                        @Html.ValidationMessageFor(x => x.WorkgroupAccount.Account)
					</div>
				</li>
                <li>
		            <div class="editor-label">
					    @Html.LabelFor(x => x.WorkgroupAccount.Approver)
					</div>
					<div class="editor-field">
                        @this.Select("WorkgroupAccount.Approver").Options(Model.Approvers, x=>x.Id, x=>x.FullName).FirstOption("--Select Approver--").Selected(Model.WorkgroupAccount.Approver != null ? Model.WorkgroupAccount.Approver.Id : string.Empty)
					</div>
				</li>
                <li>
		            <div class="editor-label">
					    @Html.LabelFor(x => x.WorkgroupAccount.AccountManager)
					</div>
					<div class="editor-field">
						@this.Select("WorkgroupAccount.AccountManager").Options(Model.AccountManagers, x => x.Id, x => x.FullName).FirstOption("--Select Account Manager--").Selected(Model.WorkgroupAccount.AccountManager != null ? Model.WorkgroupAccount.AccountManager.Id : string.Empty)
					</div>
				</li>
                <li>
		            <div class="editor-label">
					    @Html.LabelFor(x => x.WorkgroupAccount.Purchaser)
					</div>
					<div class="editor-field">
						@this.Select("WorkgroupAccount.Purchaser").Options(Model.Purchasers, x => x.Id, x => x.FullName).FirstOption("--Select Purchaser--").Selected(Model.WorkgroupAccount.Purchaser != null ? Model.WorkgroupAccount.Purchaser.Id : string.Empty)
					</div>
				</li>               
            </ul>

        </div>

    </section>
     @Html.Partial("_Navigation")
}